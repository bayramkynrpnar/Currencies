// <auto-generated />
using CurrenciesProject.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CurrenciesProject.Data.Migrations
{
    [DbContext(typeof(MasterContext))]
    [Migration("20220422221303_test2")]
    partial class test2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CurrenciesProject.Data.Currency", b =>
                {
                    b.Property<int>("CurrencyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CurrencyId"));

                    b.Property<string>("BanknoteSelling")
                        .HasColumnType("text");

                    b.Property<string>("CurrencyCode")
                        .HasColumnType("text");

                    b.Property<string>("Date")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("CurrencyId");

                    b.HasIndex("Date");

                    b.ToTable("Currencies");
                });

            modelBuilder.Entity("Dates", b =>
                {
                    b.Property<string>("Date")
                        .HasColumnType("text");

                    b.HasKey("Date");

                    b.ToTable("Dates");
                });

            modelBuilder.Entity("CurrenciesProject.Data.Currency", b =>
                {
                    b.HasOne("Dates", "DatesModel")
                        .WithMany("Currency")
                        .HasForeignKey("Date")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DatesModel");
                });

            modelBuilder.Entity("Dates", b =>
                {
                    b.Navigation("Currency");
                });
#pragma warning restore 612, 618
        }
    }
}
